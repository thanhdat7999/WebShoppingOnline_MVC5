@model TMDT_Web.Models.Domain.Account
@{
    ViewBag.Title = "ChatRoom";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div style="margin-bottom:1000px">
    <h2>ChatRoom</h2>
    <div class="tab">
        <button class="tablinks" onclick="openCity(event, 'London')" id="defaultOpen">Users</button>
        @foreach (var item in ViewBag.users)
        {
            <button class="tablinks" onclick="openCity(event, @item.UserID)">@item.UserName</button>
        }
    </div>
    @foreach (var item in ViewBag.users)
    {
        if (item.UserID != Model.UserID)
        {
            <div id="@item.UserID" class="tabcontent">
                <div class="chat-panel panel panel-default">
                    <div class="panel-heading">
                        Chatbox
                    </div>
                    <div class="panel-body" id="chat" style="height:250px">
                        <input type="hidden" id="userid" value="@item.UserID" />
                        <input type="hidden" id="displayname" value="@item.UserName" />

                        <p id="discussion"></p>
                    </div>
                    <div class="panel-footer">
                        <div class="input-group">
                            <input id="message" type="text" name="message" class="form-control input-sm" placeholder="Type here.." />
                            <span class="input-group-btn">
                                <input type="button" class="btn btn-warning btn-sm" id="sendmessage" value="Send" />
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        }
    }

</div>


<script>
    function openCity(evt, cityName) {
        var i, tabcontent, tablinks;
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
    }
    // Get the element with id="defaultOpen" and click on it
    document.getElementById("defaultOpen").click();
</script>


@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (id, name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(id) + ':' + htmlEncode(name) + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val();
            // Get the user id and store it to prepend to messages.
            $('#userid').val();
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#userid').val(), $('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}