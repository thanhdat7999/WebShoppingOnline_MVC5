@model TMDT_Web.Models.Domain.Account
@{
    ViewBag.Title = "ChatRoom";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--Chat box-->
<div class="chat-panel panel panel-default">
    <div class="panel-heading">
        ChatBox using Signalr
        <i class="fa fa-paper-plane fa-fw"></i>
    </div>

    <div class="panel-body" id="chat" style="height:500px; overflow:scroll; display:flex; flex-direction:column-reverse">
        <input type="hidden" id="displayname" value="@Model.UserName" />
        <input type="hidden" id="avatar" value="@Model.Avatar" />

        <p id="discussion"></p>
    </div>

    <div class="panel-footer">
        <div class="input-group">
            <input id="message" type="text" name="message" class="form-control input-sm" placeholder="Type your message here..." />
            <span class="input-group-btn">
                <input type="button" class="btn btn-warning btn-sm" id="sendmessage" value="Send" />
            </span>
        </div>
    </div>
</div>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name,avatar, message) {
                // Add the message to the page.
                $('#discussion').append('<li><img src="/Images/Avatar/' + htmlEncode(avatar) + '" style="height:50px; width:50px"/>' + '<strong>' + htmlEncode(name) + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val();
            $('#avatar').val();
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#avatar').val() , $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });

            $('#message').keypress(function (e) {
                var key = e.which;
                if (key == 13) {
                    $('#sendmessage').click();
                    return false;
                }
            })
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}
<!--End Chat box-->
